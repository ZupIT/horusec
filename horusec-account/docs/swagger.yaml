definitions:
  account.Company:
    properties:
      authzAdmin:
        type: string
      authzMember:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  account.CreateAccount:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  account.EmailData:
    properties:
      email:
        type: string
    type: object
  account.InviteUser:
    properties:
      email:
        type: string
      role:
        type: string
    type: object
  account.LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  account.Repository:
    properties:
      authzAdmin:
        type: string
      authzMember:
        type: string
      authzSupervisor:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  account.ResetCodeData:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  account.ValidateUnique:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  http.Response:
    properties:
      code:
        type: integer
      content:
        type: object
      status:
        type: string
    type: object
  roles.AccountCompany:
    properties:
      role:
        type: string
    type: object
  roles.AccountRepository:
    properties:
      role:
        type: string
    type: object
info:
  contact:
    email: horusec@zup.com.br
    name: Horusec
    url: https://github.com/ZupIT/horusec
  description: Service of Horusec.
  termsOfService: http://swagger.io/terms/
  title: Horusec-Account
paths:
  /api/account/change-password:
    post:
      consumes:
      - application/json
      description: change password!
      operationId: change-password
      parameters:
      - description: new password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /api/account/create-account:
    post:
      consumes:
      - application/json
      description: Create a new account!
      operationId: create-account
      parameters:
      - description: create account info
        in: body
        name: CreateAccount
        required: true
        schema:
          $ref: '#/definitions/account.CreateAccount'
      produces:
      - application/json
      responses:
        "201":
          description: STATUS CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /api/account/delete:
    delete:
      consumes:
      - application/json
      description: Delete account and all permissions!
      operationId: delete-account
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /api/account/login:
    post:
      consumes:
      - application/json
      description: login into account!
      operationId: login
      parameters:
      - description: login data info
        in: body
        name: LoginData
        required: true
        schema:
          $ref: '#/definitions/account.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /api/account/logout:
    post:
      consumes:
      - application/json
      description: logout!
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /api/account/renew-token:
    post:
      consumes:
      - application/json
      description: renew token!
      operationId: renew-token
      parameters:
      - description: refresh token
        in: body
        name: refreshToken
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /api/account/send-code:
    post:
      consumes:
      - application/json
      description: send reset password code!
      operationId: reset-password-code
      parameters:
      - description: reset password email info
        in: body
        name: EmailData
        required: true
        schema:
          $ref: '#/definitions/account.EmailData'
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /api/account/validate-code:
    post:
      consumes:
      - application/json
      description: validate reset password code!
      operationId: validate-password-code
      parameters:
      - description: reset password data info
        in: body
        name: ResetCodeData
        required: true
        schema:
          $ref: '#/definitions/account.ResetCodeData'
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /api/account/validate/{accountID}:
    get:
      consumes:
      - application/json
      description: validate email!
      operationId: validate-email
      parameters:
      - description: accountID of the account
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /api/account/verify-already-used:
    post:
      consumes:
      - application/json
      description: Verify if email and username already in use!
      operationId: validate-unique
      parameters:
      - description: validate unique info
        in: body
        name: ValidateUnique
        required: true
        schema:
          $ref: '#/definitions/account.ValidateUnique'
      produces:
      - application/json
      responses:
        "201":
          description: STATUS CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /api/companies:
    get:
      consumes:
      - application/json
      description: list companies!
      operationId: list-companies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
    post:
      consumes:
      - application/json
      description: create company! If applicationAdmin is enable add field adminEmail in body
      operationId: create-company
      parameters:
      - description: create company info
        in: body
        name: CreateCompany
        required: true
        schema:
          $ref: '#/definitions/account.Company'
      produces:
      - application/json
      responses:
        "201":
          description: CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
  /api/companies/{companyID}:
    delete:
      consumes:
      - application/json
      description: delete company!
      operationId: delete-company
      parameters:
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
    get:
      consumes:
      - application/json
      description: get company!
      operationId: get-company
      parameters:
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
    patch:
      consumes:
      - application/json
      description: update company!
      operationId: update-company
      parameters:
      - description: update company info
        in: body
        name: UpdateCompany
        required: true
        schema:
          $ref: '#/definitions/account.Company'
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
  /api/companies/{companyID}/repositories:
    get:
      consumes:
      - application/json
      description: list repositories!
      operationId: list-repository
      parameters:
      - description: companyID of the repository
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
    post:
      consumes:
      - application/json
      description: create repository!
      operationId: create-repository
      parameters:
      - description: repository info
        in: body
        name: Repository
        required: true
        schema:
          $ref: '#/definitions/account.Repository'
      - description: companyID of the repository
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
  /api/companies/{companyID}/repositories/{repositoryID}:
    delete:
      consumes:
      - application/json
      description: delete repository!
      operationId: delete-repository
      parameters:
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
    get:
      consumes:
      - application/json
      description: get repository!
      operationId: get-repository
      parameters:
      - description: companyID of the repository
        in: path
        name: companyID
        required: true
        type: string
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
    patch:
      consumes:
      - application/json
      description: update repository!
      operationId: update-repository
      parameters:
      - description: repository info
        in: body
        name: Repository
        required: true
        schema:
          $ref: '#/definitions/account.Repository'
      - description: companyID of the repository
        in: path
        name: companyID
        required: true
        type: string
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
  /api/companies/{companyID}/repositories/{repositoryID}/roles:
    get:
      consumes:
      - application/json
      description: get all accounts in a repository!
      operationId: get-repository-accounts
      parameters:
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
    post:
      consumes:
      - application/json
      description: invite user to repository!
      operationId: invite-user-repository
      parameters:
      - description: invite user info
        in: body
        name: InviteUser
        required: true
        schema:
          $ref: '#/definitions/account.InviteUser'
      - description: companyID of the repository
        in: path
        name: companyID
        required: true
        type: string
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "409":
          description: CONFLICT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
  /api/companies/{companyID}/repositories/{repositoryID}/roles/{accountID}:
    delete:
      consumes:
      - application/json
      description: remove user from repository!
      operationId: remove-user-repository
      parameters:
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      - description: accountID of the account
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
    patch:
      consumes:
      - application/json
      description: update account repository!
      operationId: update-account-repository
      parameters:
      - description: account repository info
        in: body
        name: AccountRepository
        required: true
        schema:
          $ref: '#/definitions/roles.AccountRepository'
      - description: companyID of the repository
        in: path
        name: companyID
        required: true
        type: string
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      - description: accountID of the repository
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Repositories
  /api/companies/{companyID}/roles:
    get:
      consumes:
      - application/json
      description: get all accounts in a company!
      operationId: get-company-accounts
      parameters:
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
    post:
      consumes:
      - application/json
      description: invite user to company!
      operationId: invite-user
      parameters:
      - description: invite user info
        in: body
        name: InviteUser
        required: true
        schema:
          $ref: '#/definitions/account.InviteUser'
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "409":
          description: CONFLICT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
  /api/companies/{companyID}/roles/{accountID}:
    delete:
      consumes:
      - application/json
      description: remove user from company!
      operationId: remove-user
      parameters:
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      - description: accountID of the account
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
    patch:
      consumes:
      - application/json
      description: update account company!
      operationId: update-account-company
      parameters:
      - description: account company info
        in: body
        name: AccountCompany
        required: true
        schema:
          $ref: '#/definitions/roles.AccountCompany'
      - description: companyID of the company
        in: path
        name: companyID
        required: true
        type: string
      - description: accountID of the account
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Companies
  /api/health:
    get:
      consumes:
      - application/json
      description: Check if Health of service it's OK!
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Health
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
