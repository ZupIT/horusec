// Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package horusec

import (
	"github.com/ZupIT/horusec/development-kit/pkg/enums/horusec"
	"github.com/ZupIT/horusec/development-kit/pkg/enums/languages"
	"github.com/ZupIT/horusec/development-kit/pkg/enums/severity"
	"github.com/ZupIT/horusec/development-kit/pkg/enums/tools"
	"github.com/google/uuid"
)

type Vulnerability struct {
	VulnerabilityID uuid.UUID                 `json:"vulnerabilityID" gorm:"Column:vulnerability_id"`
	Line            string                    `json:"line" gorm:"Column:line"`
	Column          string                    `json:"column" gorm:"Column:column"`
	Confidence      string                    `json:"confidence" gorm:"Column:confidence"`
	File            string                    `json:"file" gorm:"Column:file"`
	Code            string                    `json:"code" gorm:"Column:code"`
	Details         string                    `json:"details" gorm:"Column:details"`
	SecurityTool    tools.Tool                `json:"securityTool" gorm:"Column:security_tool"`
	Language        languages.Language        `json:"language" gorm:"Column:language"`
	Severity        severity.Severity         `json:"severity" gorm:"Column:severity"`
	VulnHash        string                    `json:"vulnHash" gorm:"Column:vuln_hash"`
	Type            horusec.VulnerabilityType `json:"type" gorm:"Column:type"`
	CommitAuthor    string                    `json:"commitAuthor" gorm:"Column:commit_author"`
	CommitEmail     string                    `json:"commitEmail" gorm:"Column:commit_email"`
	CommitHash      string                    `json:"commitHash" gorm:"Column:commit_hash"`
	CommitMessage   string                    `json:"commitMessage" gorm:"Column:commit_message"`
	CommitDate      string                    `json:"commitDate" gorm:"Column:commit_date"`
}

func (v *Vulnerability) GetTable() string {
	return "vulnerabilities"
}

func (v *Vulnerability) GenerateID() {
	v.VulnerabilityID = uuid.New()
}

func (v *Vulnerability) SetType(vulnType horusec.VulnerabilityType) {
	if vulnType != "" {
		v.Type = vulnType
	} else {
		v.Type = horusec.Vulnerability
	}
}
