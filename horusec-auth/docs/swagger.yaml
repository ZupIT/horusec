definitions:
  dto.CreateAccount:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.CreateAccountFromKeycloakResponse:
    properties:
      accountID:
        type: string
      email:
        type: string
      isApplicationAdmin:
        type: boolean
      username:
        type: string
    type: object
  dto.Credentials:
    properties:
      otp:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.EmailData:
    properties:
      email:
        type: string
    type: object
  dto.KeycloakToken:
    properties:
      accessToken:
        type: string
    type: object
  dto.ResetCodeData:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  dto.UpdateAccount:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  dto.ValidateUnique:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  http.Response:
    properties:
      code:
        type: integer
      content:
        type: object
      status:
        type: string
    type: object
info:
  contact:
    email: horusec@zup.com.br
    name: Horusec
    url: https://github.com/ZupIT/horusec
  description: Service of Horusec.
  termsOfService: http://swagger.io/terms/
  title: Horusec-Auth
paths:
  /auth/account/change-password:
    post:
      consumes:
      - application/json
      description: change password!
      operationId: change-password
      parameters:
      - description: new password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /auth/account/create-account:
    post:
      consumes:
      - application/json
      description: Create a new account!
      operationId: create-account
      parameters:
      - description: create account info
        in: body
        name: CreateAccount
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAccount'
      produces:
      - application/json
      responses:
        "201":
          description: STATUS CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /auth/account/create-account-from-keycloak:
    post:
      consumes:
      - application/json
      description: Create a new account with keycloak data!
      operationId: create-account-keycloak
      parameters:
      - description: keycloak token info
        in: body
        name: KeycloakToken
        required: true
        schema:
          $ref: '#/definitions/dto.KeycloakToken'
      produces:
      - application/json
      responses:
        "200":
          description: STATUS OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  $ref: '#/definitions/dto.CreateAccountFromKeycloakResponse'
              type: object
        "201":
          description: STATUS CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /auth/account/delete:
    delete:
      consumes:
      - application/json
      description: Delete account and all permissions!
      operationId: delete-account
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /auth/account/logout:
    post:
      consumes:
      - application/json
      description: logout!
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /auth/account/renew-token:
    post:
      consumes:
      - application/json
      description: renew token!
      operationId: renew-token
      parameters:
      - description: refresh token
        in: body
        name: refreshToken
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /auth/account/send-code:
    post:
      consumes:
      - application/json
      description: send reset password code!
      operationId: reset-password-code
      parameters:
      - description: reset password email info
        in: body
        name: EmailData
        required: true
        schema:
          $ref: '#/definitions/dto.EmailData'
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /auth/account/update:
    patch:
      consumes:
      - application/json
      description: Update account username and/or email
      operationId: update-account
      parameters:
      - description: update account info
        in: body
        name: UpdateAccount
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /auth/account/validate-code:
    post:
      consumes:
      - application/json
      description: validate reset password code!
      operationId: validate-password-code
      parameters:
      - description: reset password data info
        in: body
        name: ResetCodeData
        required: true
        schema:
          $ref: '#/definitions/dto.ResetCodeData'
      produces:
      - application/json
      responses:
        "204":
          description: NO CONTENT
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "401":
          description: UNAUTHORIZED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /auth/account/validate/{accountID}:
    get:
      consumes:
      - application/json
      description: validate email!
      operationId: validate-email
      parameters:
      - description: accountID of the account
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /auth/account/verify-already-used:
    post:
      consumes:
      - application/json
      description: Verify if email and username already in use!
      operationId: validate-unique
      parameters:
      - description: validate unique info
        in: body
        name: ValidateUnique
        required: true
        schema:
          $ref: '#/definitions/dto.ValidateUnique'
      produces:
      - application/json
      responses:
        "201":
          description: STATUS CREATED
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Account
  /auth/auth/authenticate:
    post:
      consumes:
      - application/json
      description: authenticate login by type!
      operationId: authenticate login
      parameters:
      - description: auth info
        in: body
        name: Credentials
        required: true
        schema:
          $ref: '#/definitions/dto.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: STATUS OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Auth
  /auth/auth/config:
    get:
      consumes:
      - application/json
      description: get actual type!
      operationId: get type
      produces:
      - application/json
      responses:
        "200":
          description: STATUS OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Auth
  /auth/health:
    get:
      consumes:
      - application/json
      description: Check if Health of service it's OK!
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Health
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Horusec-Authorization
    type: apiKey
swagger: "2.0"
